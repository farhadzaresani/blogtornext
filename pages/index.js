import { QueryClient, useQuery } from "@tanstack/react-query";
import Head from "next/head";
import { dehydrate } from "react-query";
import BCard from "../components/blog/BCard";
import HomeHero from "../components/homePage/HomeHero";
import ImageLoader from "../components/loader/ImageLoader";
import UserCard from "../components/user/UserCard";
import { getTopBlogs, getTopUsers } from "../lib/getUsersData";
import styles from "../styles/Home.module.css";

export async function getServerSideProps(context) {
  const queryClient = new QueryClient();
  await queryClient.prefetchQuery(
    ["posts"],
    getTopBlogs && ["data"],
    getTopUsers
  );

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
}

export default function Home(props) {
  const users = useQuery({
    queryKey: ["data"],
    queryFn: getTopUsers,
  });
  const blogs = useQuery({
    queryKey: ["post"],
    queryFn: getTopBlogs,
  });

  if (blogs.isLoading || users.isLoading) {
    return <ImageLoader />;
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Next Blog</title>
        <meta name="Blog to next app" content="Generated by create next app" />
        <link rel="icon" href="/blogtor.png" />
      </Head>
      <main>
        <HomeHero />
        <div className="px-14 ">
          <h1 className="text-cream font-bold text-xl my-8 ">Top Writers</h1>
          <div className=" flex flex-col md:flex-row gap-10 justify-between lg:mx-20 ">
            {users.data.map((user, i) => {
              return (
                <UserCard
                  key={i}
                  image={user.avatar}
                  name={user.name}
                  bio={user.bio}
                  id={user._id}
                />
              );
            })}
          </div>
        </div>
        <div className="p-14  ">
          <h1 className="text-cream font-bold text-xl my-8 ">Top Blogs</h1>
          <div className=" flex flex-col md:flex-row gap-10 justify-between lg:mx-20 ">
            {blogs.data.map((blog, i) => {
              return (
                <BCard
                  key={i}
                  image={blog.imgurl}
                  content={blog.content}
                  name={blog.title}
                  id={blog._id}
                />
              );
            })}
          </div>
        </div>
      </main>
    </div>
  );
}
